---
name: 'hostwithquantum/setup-runway'
description: 'Setup the runway CLI on GitHub Actions'
branding:
  icon: 'zap'
  color: 'yellow'
inputs:
  username:
    required: true
    description: Runway account
  password:
    required: true
    description: Runway password
  application:
    required: false
    description: Runway application
  public-key:
    description: ssh public key (secret)
    required: false
  private-key:
    description: ssh private key (secret)
    required: false
  public-key-location:
    description: ssh public key location
    required: true
    default: "~/.ssh/id_rsa.pub"
  private-key-location:
    description: ssh private key location
    required: true
    default: "~/.ssh/id_rsa"
  add-key:
    description: if set to true, run "runway key create"
    required: true
    default: 'false'
  setup-ssh:
    description: if set to true, setup ssh to work for "runway app deploy"
    default: 'false'
  log-level:
    description: debug, info, warn, error
    default: error
    required: true
  version:
    description: runway cli version
    default: "latest"
    required: true
  controller-url:
    description: Custom controller URL (for testing + enterprise)
    required: false
runs:
  using: "composite"
  steps:
    - name: setup your ssh public and private key
      shell: bash
      if: ${{ inputs.private-key != '' && inputs.public-key != '' }}
      run: |
        mkdir -p ~/.ssh/
        echo "${{ inputs.private-key }}" > ${{ inputs.private-key-location }}
        echo "${{ inputs.public-key }}" > ${{ inputs.public-key-location }}
        chmod 0600 ${{ inputs.private-key-location }}
        chmod 0600 ${{ inputs.public-key-location }}
        echo "SSH keys added âœ…" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo " - public key in ${{ inputs.public-key-location }}" >> $GITHUB_STEP_SUMMARY
        echo " - private key in ${{ inputs.private-key-location }}" >> $GITHUB_STEP_SUMMARY
    - shell: bash
      run: |
        ARCH=$(uname -m)
        case $ARCH in
          x86_64) ARCH="amd64" ;;
          aarch64) ARCH="arm64" ;;
        esac
        echo "RUNWAY_ARCH=$ARCH" >> $GITHUB_ENV
    - name: install runway cli
      run: |
        curl \
          -H 'Cache-Control: no-cache' \
          "https://download.runway.horse/runway/${{ inputs.version }}/runway_linux_${RUNWAY_ARCH}?nocache=$(date +%s)" \
          -o ${{ github.action_path }}/runway \
          && chmod +x ${{ github.action_path }}/runway
      shell: bash
    - run: echo "${{ github.action_path }}" >> $GITHUB_PATH
      shell: bash
    - name: "Configure how Runway behaves"
      run: |
        echo "RUNWAY_NONINTERACTIVE=true" >> $GITHUB_ENV
        echo "RUNWAY_LOGLEVEL=${{ inputs.log-level }}" >> $GITHUB_ENV
        echo "RUNWAY_OUTPUT=quiet" >> $GITHUB_ENV
      shell: bash
    - shell: bash
      run: |
        runway -v
        echo "Installed Runway CLI âœ…" >> $GITHUB_STEP_SUMMARY
    - shell: bash
      run: |
        runway login -u "${{ inputs.username }}" -p "${{ inputs.password }}"
        echo "Logged in successfully âœ…" >> $GITHUB_STEP_SUMMARY
    - if: ${{ inputs.add-key == 'true' }}
      shell: bash
      run: |
        runway key create ${{ inputs.public-key-location }}
        echo "Imported a new key âœ…" >> $GITHUB_STEP_SUMMARY
    - if: ${{ inputs.application != '' }}
      shell: bash
      run: |
        if runway app show -a "${{ inputs.application }}" >/dev/null 2>&1; then
          runway gitremote -a "${{ inputs.application }}"
          echo "Attached to application: ${{ inputs.application }} âœ…" >> $GITHUB_STEP_SUMMARY
        else
          echo "Application does not exist..."
          runway app create -a "${{ inputs.application }}"
          echo "Created new application: ${{ inputs.application }} âœ…" >> $GITHUB_STEP_SUMMARY
        fi
    - env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        echo "SSH_AUTH_SOCK=${SSH_AUTH_SOCK}" >> $GITHUB_ENV
        ssh-keyscan -p 2222 deploy.runway.horse >> ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add ${{ inputs.private-key-location }}
        echo "ssh setup complete âœ…" >> $GITHUB_STEP_SUMMARY
      if: ${{ inputs.setup-ssh == 'true' || (inputs.private-key != '' && inputs.public-key != '') }}
      shell: bash
    - run: |
        echo "RUNWAY_CONTROLLER=${{ inputs.controller-url }}" >> $GITHUB_ENV
        echo "Set a custom controller âœ…" >> $GITHUB_STEP_SUMMARY
      if: ${{ inputs.controller-url != '' }}
      shell: bash
    - shell: bash
      run: |
        echo "Let's deploy something?! ðŸš€ðŸ¤˜" >> $GITHUB_STEP_SUMMARY
